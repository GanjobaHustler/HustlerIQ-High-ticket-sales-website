name: Security.txt Validation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  validate-security-txt:
    name: Validate Security.txt
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            api.github.com:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Check security.txt exists
        run: |
          if [ ! -f ".well-known/security.txt" ]; then
            echo "‚ùå FAIL: .well-known/security.txt is missing"
            exit 1
          fi
          echo "‚úÖ PASS: security.txt exists"

      - name: Validate security.txt format
        run: |
          echo "üîç Validating security.txt format..."
          
          # Check required fields
          if ! grep -q "^Contact:" .well-known/security.txt; then
            echo "‚ùå FAIL: Missing Contact field"
            exit 1
          fi
          
          if ! grep -q "^Expires:" .well-known/security.txt; then
            echo "‚ùå FAIL: Missing Expires field"
            exit 1
          fi
          
          if ! grep -q "^Policy:" .well-known/security.txt; then
            echo "‚ùå FAIL: Missing Policy field"
            exit 1
          fi
          
          echo "‚úÖ PASS: All required fields present"

      - name: Check security.txt not altered maliciously
        run: |
          echo "üîç Checking security.txt content integrity..."
          
          # Verify contact information hasn't been altered
          if ! grep -q "security@hustleriq.com" .well-known/security.txt; then
            echo "‚ùå FAIL: Security contact email altered or missing"
            exit 1
          fi
          
          # Verify policy link is correct
          if ! grep -q "SECURITY.md" .well-known/security.txt; then
            echo "‚ùå FAIL: Security policy link altered or missing"
            exit 1
          fi
          
          echo "‚úÖ PASS: Security.txt content integrity verified"

      - name: Check expires date is future
        run: |
          echo "üîç Checking expires date..."
          
          expires_date=$(grep "^Expires:" .well-known/security.txt | cut -d' ' -f2)
          current_date=$(date -u +%Y-%m-%dT%H:%M:%S.000Z)
          
          if [[ "$expires_date" < "$current_date" ]]; then
            echo "‚ùå WARNING: security.txt expires date is in the past: $expires_date"
            echo "Please update the expires date to a future date"
            # Don't fail the build, just warn
          else
            echo "‚úÖ PASS: Expires date is in the future: $expires_date"
          fi
