name: Security Baseline Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  sast-codeql:
    name: CodeQL Analysis (SAST)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            uploads.github.com:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Initialize CodeQL
        uses: github/codeql-action/init@2c779ab0d087cd7fe7b826087247c2c81f27bfa6 # v3.26.7
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@2c779ab0d087cd7fe7b826087247c2c81f27bfa6 # v3.26.7

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@2c779ab0d087cd7fe7b826087247c2c81f27bfa6 # v3.26.7
        with:
          category: "/language:${{matrix.language}}"

  sast-semgrep:
    name: Semgrep Analysis (SAST)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            semgrep.dev:443
            metrics.semgrep.dev:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Run Semgrep
        run: semgrep --config=auto --sarif --output=semgrep.sarif
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@2c779ab0d087cd7fe7b826087247c2c81f27bfa6 # v3.26.7
        with:
          sarif_file: semgrep.sarif
        if: always()

  sca-osv:
    name: OSV Scanner (SCA)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            api.osv.dev:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Install OSV Scanner
        run: |
          curl -sSfL https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64 -o osv-scanner
          chmod +x osv-scanner

      - name: Run OSV Scanner
        run: |
          ./osv-scanner --recursive --format sarif --skip-git . > osv-results.sarif || echo 'No vulnerabilities found'

      - name: Check SARIF file has results
        id: check-sarif
        run: |
          if [ -f osv-results.sarif ] && [ -s osv-results.sarif ] && grep -q '"results"' osv-results.sarif; then
            echo "has-results=true" >> ""
          else
            echo "has-results=false" >> ""
          fi

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@2c779ab0d087cd7fe7b826087247c2c81f27bfa6 # v3.26.7
        if: steps.check-sarif.outputs.has-results == 'true'
        with:
          sarif_file: osv-results.sarif

  secrets-gitleaks:
    name: GitLeaks Secret Scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            api.github.com:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@bf2dc8e55639c1e091e9b45970152e4313705814 # v2.3.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  secrets-trufflehog:
    name: TruffleHog Secret Scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            api.github.com:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@7f32919787f5b745dd2bc87fa92165782e869be2 # v3.90.6
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  sbom-generation:
    name: SBOM Generation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            registry.npmjs.org:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate SBOM
        run: |
          npx @cyclonedx/cyclonedx-npm --output-format JSON --output-file sbom.json

      - name: Upload SBOM
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: sbom
          path: sbom.json
